// <auto-generated />
using System;
using Legalizaciones.Data.AppDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Legalizaciones.Data.Migrations
{
    [DbContext(typeof(AppDataContext))]
    partial class AppDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Legalizaciones.Model.Banco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Estatus");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Banco");
                });

            modelBuilder.Entity("Legalizaciones.Model.ConfiguracionGasto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cargo");

                    b.Property<string>("CargoId")
                        .IsRequired();

                    b.Property<string>("Descripcion")
                        .IsRequired();

                    b.Property<int?>("DestinoId");

                    b.Property<string>("DestinoNombre");

                    b.Property<int>("Estatus");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<bool>("GastoDiario");

                    b.Property<int>("MonedaId");

                    b.Property<string>("MonedaNombre");

                    b.Property<float>("Monto");

                    b.Property<int?>("OrigenId");

                    b.Property<string>("OrigenNombre");

                    b.Property<int>("PaisId");

                    b.Property<string>("PaisNombre");

                    b.Property<string>("TipoServicio");

                    b.Property<string>("TipoServicioId")
                        .IsRequired();

                    b.Property<int>("ZonaDestinoId");

                    b.Property<int>("ZonaOrigenId");

                    b.HasKey("Id");

                    b.HasIndex("DestinoId");

                    b.HasIndex("MonedaId");

                    b.HasIndex("OrigenId");

                    b.HasIndex("PaisId");

                    b.ToTable("ConfiguracionGasto");
                });

            modelBuilder.Entity("Legalizaciones.Model.EmpleadoPermiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EmpleadoCedula");

                    b.Property<string>("EmpleadoPermisoCedula");

                    b.Property<string>("EmpleadoPermisoNombre");

                    b.Property<int>("Estatus");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<int>("TipoPermisoId");

                    b.HasKey("Id");

                    b.HasIndex("TipoPermisoId");

                    b.ToTable("EmpleadoPermiso");
                });

            modelBuilder.Entity("Legalizaciones.Model.ItemSolicitud.EstadoLegalizacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion")
                        .IsRequired();

                    b.Property<int>("Estatus");

                    b.Property<DateTime>("FechaCreacion");

                    b.HasKey("Id");

                    b.ToTable("EstadoLegalizacion");
                });

            modelBuilder.Entity("Legalizaciones.Model.ItemSolicitud.EstadoSolicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion")
                        .IsRequired();

                    b.Property<int>("Estatus");

                    b.Property<DateTime>("FechaCreacion");

                    b.HasKey("Id");

                    b.ToTable("EstadoSolicitud");
                });

            modelBuilder.Entity("Legalizaciones.Model.ItemSolicitud.Moneda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Abreviatura");

                    b.Property<int>("Estatus");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<byte>("Simbolo");

                    b.HasKey("Id");

                    b.ToTable("Moneda");
                });

            modelBuilder.Entity("Legalizaciones.Model.ItemSolicitud.Tasa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Estatus");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<int>("MonedaId");

                    b.Property<string>("Valor")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("MonedaId");

                    b.ToTable("Tasa");
                });

            modelBuilder.Entity("Legalizaciones.Model.Jerarquia.Ciudad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Estatus");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<int>("PaisID");

                    b.HasKey("Id");

                    b.HasIndex("PaisID");

                    b.ToTable("Ciudad");
                });

            modelBuilder.Entity("Legalizaciones.Model.Jerarquia.Destino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Estatus");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Destino");
                });

            modelBuilder.Entity("Legalizaciones.Model.Jerarquia.OrigenDestino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Estatus");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<string>("Nombre");

                    b.Property<int>("PaisId");

                    b.HasKey("Id");

                    b.ToTable("OrigenDestino");
                });

            modelBuilder.Entity("Legalizaciones.Model.Jerarquia.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Abreviatura");

                    b.Property<int>("Estatus");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("Legalizaciones.Model.Jerarquia.Zona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Abreviatura");

                    b.Property<int>("DestinoID");

                    b.Property<int>("Estatus");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DestinoID");

                    b.ToTable("Zona");
                });

            modelBuilder.Entity("Legalizaciones.Model.KactusEmpleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cargo")
                        .IsRequired();

                    b.Property<string>("CargoEmpleado");

                    b.Property<string>("Celular");

                    b.Property<string>("CentroCosto");

                    b.Property<string>("CodCiudadExpedicion");

                    b.Property<string>("CodCiudadResidencia");

                    b.Property<string>("CodDeptoExpedicion");

                    b.Property<string>("CodDeptoResidencia");

                    b.Property<int>("CodTipoEspPersonaPreliq");

                    b.Property<int>("CodTipoPersona");

                    b.Property<int>("CodUbicacion");

                    b.Property<string>("CodigoArea");

                    b.Property<string>("CodigoEmpresa");

                    b.Property<string>("CodigoGrupo");

                    b.Property<string>("CodigoNivel");

                    b.Property<int>("CodigoNivel1");

                    b.Property<int>("CodigoNivel2");

                    b.Property<int>("CodigoNivel3");

                    b.Property<int>("CodigoNivel4");

                    b.Property<int>("CodigoNivel5");

                    b.Property<int>("CodigoNivel6");

                    b.Property<int>("CodigoNivel7");

                    b.Property<string>("Direccion");

                    b.Property<string>("Email");

                    b.Property<string>("Eps");

                    b.Property<string>("EscalaSalarial");

                    b.Property<string>("EstadoEmpleado");

                    b.Property<int>("Estatus");

                    b.Property<string>("ExtensionCompania");

                    b.Property<DateTime>("FecActCargo");

                    b.Property<DateTime>("FecActContr");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaInicioContrato");

                    b.Property<DateTime>("FechaNacimiento");

                    b.Property<string>("GanaExtras");

                    b.Property<string>("Genero");

                    b.Property<string>("IdentificacionExterna");

                    b.Property<string>("NombreNivel");

                    b.Property<string>("NombreNivel1");

                    b.Property<string>("NombreNivel2");

                    b.Property<string>("NombreNivel3");

                    b.Property<string>("NombreNivel4");

                    b.Property<string>("NombreNivel5");

                    b.Property<string>("NombreNivel6");

                    b.Property<string>("NombreNivel7");

                    b.Property<string>("NumeroContrato");

                    b.Property<string>("NumeroDeIdentificacion");

                    b.Property<string>("PrimerApellido");

                    b.Property<string>("PrimerNombre");

                    b.Property<string>("PuedeSerVisitado");

                    b.Property<string>("Rh");

                    b.Property<string>("SegundoApellido");

                    b.Property<string>("SegundoNombre");

                    b.Property<string>("Telefono");

                    b.Property<string>("Temporal");

                    b.Property<string>("TipoContratista");

                    b.Property<string>("TipoDeIdentificacion");

                    b.Property<string>("TipoDeSangre");

                    b.Property<bool>("Titular");

                    b.Property<string>("ValidoParaLiqNomina");

                    b.Property<int>("VencimientoAccion");

                    b.HasKey("Id");

                    b.ToTable("KactusEmpleado");
                });

            modelBuilder.Entity("Legalizaciones.Model.Legalizacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BancoId");

                    b.Property<long>("Consignacion");

                    b.Property<int?>("DestinoID")
                        .IsRequired();

                    b.Property<string>("EmpleadoCedula");

                    b.Property<string>("EmpleadoNombre");

                    b.Property<int?>("EstadoId");

                    b.Property<int>("Estatus");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaDesde");

                    b.Property<DateTime>("FechaHasta");

                    b.Property<int?>("FlujoSolicitudId");

                    b.Property<decimal>("MontoAnticipoEntregado");

                    b.Property<decimal>("MontoGastosReportados");

                    b.Property<decimal>("MontoSaldo");

                    b.Property<int>("PasoFlujoSolicitudId");

                    b.Property<long>("ReciboCaja");

                    b.Property<int>("SolicitudID");

                    b.Property<string>("Valor")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DestinoID");

                    b.HasIndex("EstadoId");

                    b.HasIndex("FlujoSolicitudId");

                    b.HasIndex("PasoFlujoSolicitudId");

                    b.ToTable("Legalizacion");
                });

            modelBuilder.Entity("Legalizaciones.Model.LegalizacionAprobacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Aprobador");

                    b.Property<int>("Estatus");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<int>("LegalizacionId");

                    b.Property<int>("Orden");

                    b.Property<int?>("PasoFlujoSolicitudId");

                    b.Property<string>("SuplenteDos");

                    b.Property<string>("SuplenteUno");

                    b.HasKey("Id");

                    b.HasIndex("LegalizacionId");

                    b.HasIndex("PasoFlujoSolicitudId");

                    b.ToTable("LegalizacionAprobacion");
                });

            modelBuilder.Entity("Legalizaciones.Model.LegalizacionGastos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CentroCosto");

                    b.Property<int>("CentroCostoId");

                    b.Property<string>("CentroOperacion");

                    b.Property<int>("CentroOperacionId");

                    b.Property<string>("Ciudad");

                    b.Property<int>("CiudadId");

                    b.Property<string>("Concepto");

                    b.Property<int>("Estatus");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<string>("FechaGasto");

                    b.Property<string>("ICA");

                    b.Property<string>("IVA");

                    b.Property<string>("IVATeorico");

                    b.Property<int?>("LegalizacionId");

                    b.Property<int>("MotivoId");

                    b.Property<string>("Neto");

                    b.Property<string>("Pais");

                    b.Property<int>("PaisId");

                    b.Property<int>("ProveedorId");

                    b.Property<string>("ReteIVA");

                    b.Property<string>("ReteServicio");

                    b.Property<string>("Servicio");

                    b.Property<int>("TipoServicioId");

                    b.Property<string>("UnidadNegocio");

                    b.Property<int>("UnidadNegocioId");

                    b.Property<string>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("LegalizacionId");

                    b.ToTable("LegalizacionGastos");
                });

            modelBuilder.Entity("Legalizaciones.Model.ServicioDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cargo");

                    b.Property<string>("Descripcion");

                    b.Property<int?>("DestinoId");

                    b.Property<int>("Estatus");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<float>("Monto");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<int?>("OrigenId");

                    b.Property<int>("PaisID");

                    b.Property<string>("Proveedor");

                    b.Property<int>("ProveedorID");

                    b.Property<string>("TipoServicio");

                    b.Property<int>("ZonaDestinoId");

                    b.Property<int>("ZonaOrigenId");

                    b.HasKey("Id");

                    b.HasIndex("DestinoId");

                    b.HasIndex("OrigenId");

                    b.HasIndex("PaisID");

                    b.ToTable("ServicioDetalle");
                });

            modelBuilder.Entity("Legalizaciones.Model.Solicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Area");

                    b.Property<string>("Banco");

                    b.Property<string>("CentroCosto");

                    b.Property<int?>("CentroCostoId")
                        .IsRequired();

                    b.Property<string>("CentroOperacion");

                    b.Property<int?>("CentroOperacionId")
                        .IsRequired();

                    b.Property<string>("Concepto")
                        .IsRequired();

                    b.Property<string>("ConsecutivoERP");

                    b.Property<int?>("DestinoID")
                        .IsRequired();

                    b.Property<string>("DocumentoERP");

                    b.Property<string>("EmpleadoCedula")
                        .IsRequired();

                    b.Property<string>("EmpleadoNombre")
                        .IsRequired();

                    b.Property<int?>("EstadoId");

                    b.Property<int>("Estatus");

                    b.Property<string>("Extracto");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<DateTime>("FechaDesde");

                    b.Property<DateTime>("FechaHasta");

                    b.Property<DateTime>("FechaSolicitud");

                    b.Property<DateTime>("FechaVencimiento");

                    b.Property<int?>("FlujoSolicitudId");

                    b.Property<int?>("MonedaId")
                        .IsRequired();

                    b.Property<decimal>("Monto");

                    b.Property<string>("NumeroSolicitud");

                    b.Property<int?>("PasoFlujoSolicitudId");

                    b.Property<string>("RutaArchivo");

                    b.Property<int>("TipoSolicitudID");

                    b.Property<string>("UnidadNegocio");

                    b.Property<int?>("UnidadNegocioId")
                        .IsRequired();

                    b.Property<int?>("ZonaID")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DestinoID");

                    b.HasIndex("EstadoId");

                    b.HasIndex("FlujoSolicitudId");

                    b.HasIndex("MonedaId");

                    b.HasIndex("PasoFlujoSolicitudId");

                    b.HasIndex("TipoSolicitudID");

                    b.HasIndex("ZonaID");

                    b.ToTable("Solicitud");
                });

            modelBuilder.Entity("Legalizaciones.Model.SolicitudAprobacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Aprobador");

                    b.Property<int>("Estatus");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<int>("Orden");

                    b.Property<int?>("PasoFlujoSolicitudId");

                    b.Property<int>("SolicitudId");

                    b.Property<string>("SuplenteDos");

                    b.Property<string>("SuplenteUno");

                    b.HasKey("Id");

                    b.HasIndex("PasoFlujoSolicitudId");

                    b.HasIndex("SolicitudId");

                    b.ToTable("SolicitudAprobacion");
                });

            modelBuilder.Entity("Legalizaciones.Model.SolicitudGastos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Ciudad");

                    b.Property<int>("CiudadId");

                    b.Property<string>("Destino");

                    b.Property<int>("Estatus");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<string>("FechaGasto");

                    b.Property<decimal>("Monto");

                    b.Property<string>("Origen");

                    b.Property<string>("Pais");

                    b.Property<int>("PaisId");

                    b.Property<string>("Servicio");

                    b.Property<int?>("ServicioId");

                    b.Property<int?>("SolicitudId");

                    b.HasKey("Id");

                    b.HasIndex("SolicitudId");

                    b.ToTable("SolicitudGastos");
                });

            modelBuilder.Entity("Legalizaciones.Model.TipoPermiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion")
                        .IsRequired();

                    b.Property<int>("Estatus");

                    b.Property<DateTime>("FechaCreacion");

                    b.HasKey("Id");

                    b.ToTable("TipoPermiso");
                });

            modelBuilder.Entity("Legalizaciones.Model.TipoSolicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<int>("DiasHabiles");

                    b.Property<int>("Estatus");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TipoSolicitud");
                });

            modelBuilder.Entity("Legalizaciones.Model.Workflow.FlujoSolicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DestinoId");

                    b.Property<int>("Estatus");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<long>("MontoMaximo");

                    b.Property<long>("MontoMinimo");

                    b.Property<int>("TipoSolicitudId");

                    b.HasKey("Id");

                    b.HasIndex("DestinoId");

                    b.HasIndex("TipoSolicitudId");

                    b.ToTable("FlujoSolicitud");
                });

            modelBuilder.Entity("Legalizaciones.Model.Workflow.HistoricoLegalizacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<int>("Estatus");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<int>("FlujoSolicitudId");

                    b.Property<int>("LegalizacionId");

                    b.Property<int?>("PasoFlujoSolicitudId");

                    b.HasKey("Id");

                    b.HasIndex("FlujoSolicitudId");

                    b.HasIndex("LegalizacionId");

                    b.HasIndex("PasoFlujoSolicitudId");

                    b.ToTable("HistoricoLegalizacion");
                });

            modelBuilder.Entity("Legalizaciones.Model.Workflow.HistoricoSolicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<int>("Estatus");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<int>("FlujoSolicitudId");

                    b.Property<int>("PasoFlujoSolicitudId");

                    b.Property<int>("SolicitudId");

                    b.HasKey("Id");

                    b.HasIndex("FlujoSolicitudId");

                    b.HasIndex("PasoFlujoSolicitudId");

                    b.HasIndex("SolicitudId");

                    b.ToTable("HistoricoSolicitud");
                });

            modelBuilder.Entity("Legalizaciones.Model.Workflow.PasoFlujoSolicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<string>("DescripcionAprobador");

                    b.Property<string>("DescripcionSuplenteDos");

                    b.Property<string>("DescripcionSuplenteUno");

                    b.Property<int>("Estatus");

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<int>("FlujoSolicitudId");

                    b.Property<string>("NivelAprobador");

                    b.Property<string>("NivelSuplenteDos");

                    b.Property<string>("NivelSuplenteUno");

                    b.Property<int>("Orden");

                    b.HasKey("Id");

                    b.HasIndex("FlujoSolicitudId");

                    b.ToTable("PasoFlujoSolicitud");
                });

            modelBuilder.Entity("Legalizaciones.Model.ConfiguracionGasto", b =>
                {
                    b.HasOne("Legalizaciones.Model.Jerarquia.Zona", "Destino")
                        .WithMany()
                        .HasForeignKey("DestinoId");

                    b.HasOne("Legalizaciones.Model.ItemSolicitud.Moneda", "Moneda")
                        .WithMany()
                        .HasForeignKey("MonedaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Legalizaciones.Model.Jerarquia.Zona", "Origen")
                        .WithMany()
                        .HasForeignKey("OrigenId");

                    b.HasOne("Legalizaciones.Model.Jerarquia.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Legalizaciones.Model.EmpleadoPermiso", b =>
                {
                    b.HasOne("Legalizaciones.Model.TipoPermiso", "TipoPermiso")
                        .WithMany()
                        .HasForeignKey("TipoPermisoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Legalizaciones.Model.ItemSolicitud.Tasa", b =>
                {
                    b.HasOne("Legalizaciones.Model.ItemSolicitud.Moneda", "Moneda")
                        .WithMany()
                        .HasForeignKey("MonedaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Legalizaciones.Model.Jerarquia.Ciudad", b =>
                {
                    b.HasOne("Legalizaciones.Model.Jerarquia.Pais", "Pais")
                        .WithMany("Ciudad")
                        .HasForeignKey("PaisID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Legalizaciones.Model.Jerarquia.Zona", b =>
                {
                    b.HasOne("Legalizaciones.Model.Jerarquia.Destino", "Destino")
                        .WithMany("Ciudad")
                        .HasForeignKey("DestinoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Legalizaciones.Model.Legalizacion", b =>
                {
                    b.HasOne("Legalizaciones.Model.Jerarquia.Destino", "Destino")
                        .WithMany()
                        .HasForeignKey("DestinoID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Legalizaciones.Model.ItemSolicitud.EstadoLegalizacion", "EstadoLegalizacion")
                        .WithMany()
                        .HasForeignKey("EstadoId");

                    b.HasOne("Legalizaciones.Model.Workflow.FlujoSolicitud", "FlujoSolicitud")
                        .WithMany()
                        .HasForeignKey("FlujoSolicitudId");

                    b.HasOne("Legalizaciones.Model.Workflow.PasoFlujoSolicitud", "PasoFlujoSolicitud")
                        .WithMany()
                        .HasForeignKey("PasoFlujoSolicitudId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Legalizaciones.Model.LegalizacionAprobacion", b =>
                {
                    b.HasOne("Legalizaciones.Model.Legalizacion", "Legalizacion")
                        .WithMany()
                        .HasForeignKey("LegalizacionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Legalizaciones.Model.Workflow.PasoFlujoSolicitud", "PasoFlujoSolicitud")
                        .WithMany()
                        .HasForeignKey("PasoFlujoSolicitudId");
                });

            modelBuilder.Entity("Legalizaciones.Model.LegalizacionGastos", b =>
                {
                    b.HasOne("Legalizaciones.Model.Legalizacion", "Legalizacion")
                        .WithMany()
                        .HasForeignKey("LegalizacionId");
                });

            modelBuilder.Entity("Legalizaciones.Model.ServicioDetalle", b =>
                {
                    b.HasOne("Legalizaciones.Model.Jerarquia.Zona", "Destino")
                        .WithMany()
                        .HasForeignKey("DestinoId");

                    b.HasOne("Legalizaciones.Model.Jerarquia.Zona", "Origen")
                        .WithMany()
                        .HasForeignKey("OrigenId");

                    b.HasOne("Legalizaciones.Model.Jerarquia.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Legalizaciones.Model.Solicitud", b =>
                {
                    b.HasOne("Legalizaciones.Model.Jerarquia.Destino", "Destino")
                        .WithMany()
                        .HasForeignKey("DestinoID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Legalizaciones.Model.ItemSolicitud.EstadoSolicitud", "EstadoSolicitud")
                        .WithMany()
                        .HasForeignKey("EstadoId");

                    b.HasOne("Legalizaciones.Model.Workflow.FlujoSolicitud", "FlujoSolicitud")
                        .WithMany()
                        .HasForeignKey("FlujoSolicitudId");

                    b.HasOne("Legalizaciones.Model.ItemSolicitud.Moneda", "Moneda")
                        .WithMany()
                        .HasForeignKey("MonedaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Legalizaciones.Model.Workflow.PasoFlujoSolicitud", "PasoFlujoSolicitud")
                        .WithMany()
                        .HasForeignKey("PasoFlujoSolicitudId");

                    b.HasOne("Legalizaciones.Model.TipoSolicitud", "TipoSolicitud")
                        .WithMany()
                        .HasForeignKey("TipoSolicitudID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Legalizaciones.Model.Jerarquia.Zona", "Zona")
                        .WithMany()
                        .HasForeignKey("ZonaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Legalizaciones.Model.SolicitudAprobacion", b =>
                {
                    b.HasOne("Legalizaciones.Model.Workflow.PasoFlujoSolicitud", "PasoFlujoSolicitud")
                        .WithMany()
                        .HasForeignKey("PasoFlujoSolicitudId");

                    b.HasOne("Legalizaciones.Model.Solicitud", "Solicitud")
                        .WithMany()
                        .HasForeignKey("SolicitudId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Legalizaciones.Model.SolicitudGastos", b =>
                {
                    b.HasOne("Legalizaciones.Model.Solicitud", "Solicitud")
                        .WithMany()
                        .HasForeignKey("SolicitudId");
                });

            modelBuilder.Entity("Legalizaciones.Model.Workflow.FlujoSolicitud", b =>
                {
                    b.HasOne("Legalizaciones.Model.Jerarquia.Destino", "Destino")
                        .WithMany()
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Legalizaciones.Model.TipoSolicitud", "TipoSolicitud")
                        .WithMany()
                        .HasForeignKey("TipoSolicitudId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Legalizaciones.Model.Workflow.HistoricoLegalizacion", b =>
                {
                    b.HasOne("Legalizaciones.Model.Workflow.FlujoSolicitud", "FlujoSolicitud")
                        .WithMany()
                        .HasForeignKey("FlujoSolicitudId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Legalizaciones.Model.Legalizacion", "Legalizacion")
                        .WithMany()
                        .HasForeignKey("LegalizacionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Legalizaciones.Model.Workflow.PasoFlujoSolicitud", "PasoFlujoSolicitud")
                        .WithMany()
                        .HasForeignKey("PasoFlujoSolicitudId");
                });

            modelBuilder.Entity("Legalizaciones.Model.Workflow.HistoricoSolicitud", b =>
                {
                    b.HasOne("Legalizaciones.Model.Workflow.FlujoSolicitud", "FlujoSolicitud")
                        .WithMany()
                        .HasForeignKey("FlujoSolicitudId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Legalizaciones.Model.Workflow.PasoFlujoSolicitud", "PasoFlujoSolicitud")
                        .WithMany()
                        .HasForeignKey("PasoFlujoSolicitudId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Legalizaciones.Model.Solicitud", "Solicitud")
                        .WithMany()
                        .HasForeignKey("SolicitudId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Legalizaciones.Model.Workflow.PasoFlujoSolicitud", b =>
                {
                    b.HasOne("Legalizaciones.Model.Workflow.FlujoSolicitud", "FlujoSolicitud")
                        .WithMany()
                        .HasForeignKey("FlujoSolicitudId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
